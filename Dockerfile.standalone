# Multi-stage build for standalone Finance Assistant
FROM node:20-alpine AS frontend-builder

# Set working directory for frontend build
WORKDIR /app/frontend

# Copy package files and install dependencies
COPY frontend/package.json frontend/package-lock.json* ./
RUN npm install

# Copy the rest of the frontend source code
COPY frontend/ ./

# Build the frontend
RUN npm run build

# Final stage
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    nginx \
    && rm -rf /var/lib/apt/lists/*

# Prevent python from writing pyc files
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Set working directory
WORKDIR /app
ENV PYTHONPATH=/app/backend

# Copy built frontend from the builder stage
COPY --from=frontend-builder /app/frontend/dist /app/static

# Copy backend requirements first
COPY backend/requirements.txt /app/backend/
RUN pip install --no-cache-dir -r /app/backend/requirements.txt

# Now copy the rest of the backend code
COPY backend/ /app/backend/

# Remove any cached Python bytecode files
RUN find /app/backend -name "*.pyc" -delete

# Create necessary directories
RUN mkdir -p /app/data /app/logs /run/nginx

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf
COPY nginx-site.conf /etc/nginx/sites-available/default

# Copy startup script
COPY startup.sh /app/startup.sh
RUN chmod +x /app/startup.sh

# Expose port
EXPOSE 8080

# Start the application
CMD ["/app/startup.sh"] 